import Head from "next/head";

import React from "react";
import useAuthStore from "@/store/useAuthStore";
import { useRouter } from "next/router";
import Modal from "@/components/Modal";

import { apiWithToken } from "@/lib/api";
import Loading from "@/components/Loading";

import Input from "@/components/forms/Input";

export default function Home() {
  const isAuthenticated = useAuthStore.useIsAuthenticated();
  const login = useAuthStore.useLogin();
  const logout = useAuthStore.useLogout();

  const user = useAuthStore.useUser();
  let [isOpen, setIsOpen] = React.useState(false);

  function closeModal() {
    setIsOpen(false);
  }

  function openModal() {
    setIsOpen(true);
  }

  const router = useRouter();

  React.useEffect(() => {
    const checkAuth = () => {
      const token = localStorage.getItem("token");

      if (token) {
        apiWithToken(token)
          .get("/secured/me")
          .then((response) => {
            login({
              name: response.data.data.name,
              email: response.data.data.email,
              token: token,
              data: response.data.data.list_dompet,
            });
          })
          .catch((error) => {
            console.log(error);
          });
      }
    };
    checkAuth();
  }, []);

  if (!router.isReady) {
    return <Loading />;
  }

  if (!isAuthenticated) {
    if (router.isReady) router.push("/login");
  }

  const onSubmit = (data: any) => {
    const token = localStorage.getItem("token");

    data.saldo = Number(data.saldo);
    if (token) {
      apiWithToken(token)
        .post("/secured/dompet", data)
        .then((response) => {
          console.log(response);
          closeModal();

          router.reload();
        })
        .catch((error) => {
          console.log(error);
        });
    } else {
      console.log("token not found");
    }
  };

  return (
    <>
      <Head>
        <title>Catatan Keuangan</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <div className='flex flex-col items-center justify-center gap-12 h-screen'>
          <h1 className='text-center'>Dashboard</h1>
          <button
            type='button'
            onClick={openModal}
            className='rounded-md bg-black bg-opacity-20 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75'
          >
            Tambah Dompet
          </button>

          {/* add modal component with children */}
          <Modal
            onSubmit={onSubmit}
            isOpen={isOpen}
            closeModal={closeModal}
            title='Buat Dompet'
          >
            <Input
              id='nama_dompet'
              label='Nama Dompet'
              placeholder='Masukkan nama'
              validation={{
                required: "Nama tidak boleh kosong",
              }}
            />

            <Input
              id='saldo'
              label='Saldo'
              placeholder='Masukkan saldo'
              type='number'
              validation={{
                required: "Saldo tidak boleh kosong",
                pattern: {
                  value: /^[0-9]*$/,
                  message: "Saldo harus berupa angka",
                },
              }}
            />
          </Modal>
          <div className='w-11/12 grid justify-center items-center grid-cols-5 mx-auto gap-2'>
            {/* map the list dompet */}
            {user &&
              user?.data?.map((item: any) => (
                <div
                  key={item.id}
                  className='w-auto h-40 p-4 bg-white rounded-xl border-2 border-gray-500 flex flex-col justify-center items-center'
                >
                  <h1 className='text-2xl font-bold'>{item.nama_dompet}</h1>
                  <h1 className='text-2xl font-bold'>
                    {/* format balance to rupiah */}
                    {new Intl.NumberFormat("id-ID", {
                      style: "currency",
                      currency: "IDR",
                    }).format(item.saldo)}
                  </h1>

                  <button
                    type='button'
                    onClick={() => router.push(`/dompet/${item.id}`)}
                    className='mt-4 rounded-md bg-black bg-opacity-20 px-4 py-2 text-sm font-medium text-white hover:bg-opacity-30 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75'
                  >
                    Lihat
                  </button>
                </div>
              ))}
          </div>

          <button onClick={logout}>logout</button>
        </div>
      </main>
    </>
  );
}
